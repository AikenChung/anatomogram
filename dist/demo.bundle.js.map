{"version":3,"sources":["webpack://[name]/./html/AnatomogramDemo.js","webpack://[name]/./src/Anatomogram.js","webpack://[name]/./src/AnatomogramSvg.js","webpack://[name]/./src/Assets.js","webpack://[name]/./src/Main.js","webpack://[name]/./src/Switcher.js","webpack://[name]/./src/img sync ^\\.\\/.*selected\\.png$","webpack://[name]/./src/img/brain.selected.png","webpack://[name]/./src/img/brain.unselected.png","webpack://[name]/./src/img/female.selected.png","webpack://[name]/./src/img/female.unselected.png","webpack://[name]/./src/img/flower_parts.selected.png","webpack://[name]/./src/img/flower_parts.unselected.png","webpack://[name]/./src/img/male.selected.png","webpack://[name]/./src/img/male.unselected.png","webpack://[name]/./src/img/whole_plant.selected.png","webpack://[name]/./src/img/whole_plant.unselected.png","webpack://[name]/./src/index.js","webpack://[name]/./src/svg sync ^\\.\\/.*\\.svg$","webpack://[name]/./src/svg/anolis_carolinensis.svg","webpack://[name]/./src/svg/arabidopsis_thaliana.svg","webpack://[name]/./src/svg/bos_taurus.svg","webpack://[name]/./src/svg/brachypodium_distachyon.flower_parts.svg","webpack://[name]/./src/svg/brachypodium_distachyon.whole_plant.svg","webpack://[name]/./src/svg/gallus_gallus.svg","webpack://[name]/./src/svg/homo_sapiens.brain.svg","webpack://[name]/./src/svg/homo_sapiens.female.svg","webpack://[name]/./src/svg/homo_sapiens.male.svg","webpack://[name]/./src/svg/hordeum_vulgare.flower_parts.svg","webpack://[name]/./src/svg/hordeum_vulgare.whole_plant.svg","webpack://[name]/./src/svg/macaca_mulatta.svg","webpack://[name]/./src/svg/monodelphis_domestica.svg","webpack://[name]/./src/svg/mus_musculus.brain.svg","webpack://[name]/./src/svg/mus_musculus.female.svg","webpack://[name]/./src/svg/mus_musculus.male.svg","webpack://[name]/./src/svg/oryza_sativa.flower_parts.svg","webpack://[name]/./src/svg/oryza_sativa.whole_plant.svg","webpack://[name]/./src/svg/papio_anubis.svg","webpack://[name]/./src/svg/rattus_norvegicus.svg","webpack://[name]/./src/svg/solanum_lycopersicum.flower_parts.svg","webpack://[name]/./src/svg/solanum_lycopersicum.whole_plant.svg","webpack://[name]/./src/svg/solanum_tuberosum.svg","webpack://[name]/./src/svg/sorghum_bicolor.flower_parts.svg","webpack://[name]/./src/svg/sorghum_bicolor.whole_plant.svg","webpack://[name]/./src/svg/tetraodon_nigroviridis.svg","webpack://[name]/./src/svg/triticum_aestivum.flower_parts.svg","webpack://[name]/./src/svg/triticum_aestivum.whole_plant.svg","webpack://[name]/./src/svg/xenopus_tropicalis.svg","webpack://[name]/./src/svg/zea_mays.flower_parts.svg","webpack://[name]/./src/svg/zea_mays.whole_plant.svg"],"names":["unique","value","index","self","indexOf","capitalizeFirstLetter","str","charAt","toUpperCase","slice","allSpecies","svgsMetadata","map","svgMetadata","species","filter","sort","getAllIds","reduce","acc","concat","ids","AnatomogramDemo","props","selectedSpecies","includes","state","allIds","showIds","highlightIds","selectIds","_handleSelectOnChange","bind","_handleCheckboxOnChange","_handleOnClick","_addRemoveFromSelectIds","event","setState","target","stateField","newShowIds","checked","id","allOrNone","Array","from","xor","replace","display","e","React","Component","propTypes","atlasUrl","PropTypes","string","pathToResources","render","options","ReactDOM","document","getElementById","Anatomogram","selectedView","getDefaultView","_switchAnatomogramView","anatomogramView","supportedSpecies","isRequired","defaultProps","groupIntoPairs","arr","f","Object","entries","groupBy","getSvgElementById","svgDomNode","getEfoLayerGroup","svgGroups","getElementsByTagName","i","length","efoLayerGroup","_getSvgElementById","children","attributes","substring","paintSvgElement","element","elementMarkup","assign","style","registerEvent","eventType","callback","addEventListener","initialiseSvgElements","idsWithMarkup","onMouseOver","onMouseOut","onClick","ix","forEach","a","t","markupNormalAndUnderFocus","find","m","markupNormal","markupUnderFocus","loadSvg","require","resolve","uri","baseUrl","URI","is","AnatomogramSvgWrapperDiv","styled","div","AnatomogramSvg","error","console","log","onInjected","toString","width","height","paddingLeft","arrayOf","shape","object","func","array","isNotBlank","trim","multipleViewsSpecies","view","anatomogramViews","reverse","getAnatomogramViews","arrayDifference","arr1","arr2","isArray","colour","opacity","fill","idsWithMarkupAccordingToCurrentColoringScheme","showColour","showOpacity","highlightColour","highlightOpacity","selectColour","selectOpacity","uniqueShowIds","uniqueHighlightIds","addColoringScheme","compose","withPropsOnChange","negate","isEqual","normaliseSpecies","mapProps","toLowerCase","addDefaultCallbacks","definePropTypes","setPropTypes","defineDefaultProps","onlyUpdateForPropTypes","loadIcon","IconWrapperDiv","IconImg","img","Switcher","onChangeView"],"mappings":"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CAA7C;AACD,CAFD;;;;;;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gE;;;;;;;;;;;ACpDA,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C","file":"demo.bundle.js","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PropTypes from 'prop-types'\n\nimport AnatomogramContainer from '../src/index'\nimport svgsMetadata from '../src/json/svgsMetadata.json'\n\nimport {xor} from 'lodash'\n\nconst unique = (value, index, self) => self.indexOf(value) === index\n\nconst capitalizeFirstLetter = (str) => str.charAt(0).toUpperCase() + str.slice(1)\n\nconst allSpecies =\n  svgsMetadata\n    .map((svgMetadata) => svgMetadata.species)\n    .filter(unique)\n    .sort()\n\nconst getAllIds = (species) =>\n  svgsMetadata\n    .filter((svgMetadata) => svgMetadata.species === species)\n    .reduce((acc, svgMetadata) => acc.concat(svgMetadata.ids), [])\n    .filter(unique)\n    .sort()\n\nclass AnatomogramDemo extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    const selectedSpecies = allSpecies.includes(`homo_sapiens`) ? `homo_sapiens` : allSpecies[0]\n\n    this.state = {\n      selectedSpecies: selectedSpecies,\n      allIds: getAllIds(selectedSpecies),\n      showIds: [],\n      highlightIds: [],\n      selectIds: []\n    }\n\n    this._handleSelectOnChange = this._handleSelectOnChange.bind(this)\n    this._handleCheckboxOnChange = this._handleCheckboxOnChange.bind(this)\n    this._handleOnClick = this._handleOnClick.bind(this)\n    this._addRemoveFromSelectIds = this._addRemoveFromSelectIds.bind(this)\n  }\n\n  _handleSelectOnChange(event) {\n    this.setState({\n      selectedSpecies: event.target.value,\n      allIds: getAllIds(event.target.value)\n    })\n  }\n\n  _handleCheckboxOnChange(event, stateField) {\n    const newShowIds =\n      event.target.checked ?\n        this.state[stateField].concat(event.target.value) :\n        this.state[stateField].filter((id) => event.target.value !== id)\n\n    this.setState({\n      [stateField]: newShowIds\n    })\n  }\n\n  _handleOnClick(allOrNone, stateField) {\n    this.setState({\n      [stateField]: allOrNone ? Array.from(this.state.allIds) : []\n    })\n  }\n\n  _addRemoveFromSelectIds(ids) {\n\n    this.setState({\n      selectIds: xor(this.state.selectIds, ids)\n    })\n  }\n\n  render() {\n    return (\n      <div className={`row`}>\n        <div className={`row`}>\n          <div className={`small-3 small-centered columns`}>\n            <select value={this.state.selectedSpecies} onChange={this._handleSelectOnChange}>\n              {[...allSpecies, `foobar`].map((species) => <option key={species} value={species}>{capitalizeFirstLetter(species.replace(`_`, ` `))}</option>)}\n            </select>\n          </div>\n        </div>\n\n        <div className={`row`}>\n          <div className={`small-4 columns`} id={`anatomogramContainer`}>\n            <AnatomogramContainer\n              {...this.props}\n              species={this.state.selectedSpecies}\n              showIds={this.state.showIds}\n              highlightIds={this.state.highlightIds}\n              selectIds={this.state.selectIds}\n              onClick={this._addRemoveFromSelectIds} />\n          </div>\n\n          <div className={`small-8 columns`}>\n            <div className={`row`}>\n              <div className={`small-4 columns`}>\n                <button className={`button`} onClick={() => {this._handleOnClick(true, `showIds`)}}>Show all</button>\n                <button className={`button`} onClick={() => {this._handleOnClick(false, `showIds`)}}>Hide all</button>\n              </div>\n              <div className={`small-4 columns`}>\n                <button className={`button`} onClick={() => {this._handleOnClick(true, `highlightIds`)}}>Highlight all</button>\n                <button className={`button`} onClick={() => {this._handleOnClick(false, `highlightIds`)}}>Unhighlight all</button>\n              </div>\n              <div className={`small-4 columns`}>\n                <button className={`button`} onClick={() => {this._handleOnClick(true, `selectIds`)}}>Select all</button>\n                <button className={`button`} onClick={() => {this._handleOnClick(false, `selectIds`)}}>Unselect all</button>\n              </div>\n            </div>\n\n            <div className={`row column`}>\n              <p>\n                Use the first checkbox to show the tissue, the second to highlight it, and the third to select it.\n                Hover over a tissue to display its name. Click on it to select it.\n              </p>\n            </div>\n\n            <div className={`row column`}>\n              {Array.from(this.state.allIds).sort().map((id) =>\n                <div key={id} style={{display: `inline-block`}}>\n                  <input\n                    type={`checkbox`}\n                    name={`showIds`} value={id}\n                    onChange={(e) => {this._handleCheckboxOnChange(e, `showIds`)}}\n                    checked={this.state.showIds.includes(id)}/>\n                  <input\n                    type={`checkbox`}\n                    name={`highlightIds`} value={id}\n                    onChange={(e) => {this._handleCheckboxOnChange(e, `highlightIds`)}}\n                    checked={this.state.highlightIds.includes(id)}/>\n                  <input type={`checkbox`}\n                    name={`selectIds`} value={id}\n                    onChange={(e) => {this._handleCheckboxOnChange(e, `selectIds`)}}\n                    checked={this.state.selectIds.includes(id)}/>\n                  <label>{id}</label>\n                </div>)}\n            </div>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nAnatomogramDemo.propTypes = {\n  atlasUrl: PropTypes.string,\n  pathToResources: PropTypes.string\n}\n\nconst render = function (options, target) {\n  ReactDOM.render(<AnatomogramDemo {...options}/>, document.getElementById(target))\n}\n\nexport {AnatomogramDemo as default, render}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Switcher from './Switcher'\nimport AnatomogramSvg from './AnatomogramSvg'\nimport {getDefaultView, supportedSpecies} from './Assets'\n\nclass Anatomogram extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      selectedView: getDefaultView(props.species)\n    }\n    this._switchAnatomogramView = this._switchAnatomogramView.bind(this)\n  }\n\n  _switchAnatomogramView(anatomogramView) {\n    this.setState({ selectedView: anatomogramView })\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.species !== state.species) {\n      return {\n        species: props.species,\n        selectedView: getDefaultView(props.species)\n      }\n    }\n    return null\n  }\n\n  render() {\n    return (\n      supportedSpecies.includes(this.props.species) &&\n        <div>\n          <Switcher\n            atlasUrl={this.props.atlasUrl}\n            species={this.props.species}\n            selectedView={this.state.selectedView}\n            onChangeView={this._switchAnatomogramView} />\n\n          <AnatomogramSvg\n            atlasUrl={this.props.atlasUrl}\n            {...this.props}\n            selectedView={this.state.selectedView} />\n        </div>\n    )\n  }\n}\n\nAnatomogram.propTypes = {\n  atlasUrl: PropTypes.string,\n  species: PropTypes.string.isRequired\n}\n\nAnatomogram.defaultProps = {\n  atlasUrl: `https://www.ebi.ac.uk/gxa/`\n}\n\nexport default Anatomogram\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport URI from 'urijs'\nimport styled from 'styled-components'\nimport ReactSVG from 'react-svg'\n\nimport {groupBy} from 'lodash'\n\nconst groupIntoPairs = (arr, f) => Object.entries(groupBy(arr, f))\n\nconst getSvgElementById = (svgDomNode) => {\n  const getEfoLayerGroup = (svgDomNode) => {\n    const svgGroups = svgDomNode.getElementsByTagName(`g`)\n    for (let i = 0 ; i < svgGroups.length ; i++) {\n      if (svgGroups[i].id === `LAYER_EFO`) {\n        return svgGroups[i]\n      }\n    }\n  }\n\n  const efoLayerGroup = getEfoLayerGroup(svgDomNode)\n\n  function _getSvgElementById(id) {\n    if (efoLayerGroup) {\n      for (let i = 0 ; i < efoLayerGroup.children.length ; i++) {\n        if (efoLayerGroup.children[i].id === id ) {\n          if (efoLayerGroup.children[i].attributes[`xlink:href`]) {\n            return _getSvgElementById(efoLayerGroup.children[i].attributes[`xlink:href`].value.substring(1))\n          }\n          else {\n            return efoLayerGroup.children[i]\n          }\n        }\n      }\n    }\n  }\n\n  return _getSvgElementById\n}\n\nconst paintSvgElement = (element, elementMarkup) => element && elementMarkup && Object.assign(element.style, elementMarkup)\n\nconst registerEvent = (element, eventType, elementMarkup, callback) => {\n  element && element.addEventListener(eventType, () => {\n    paintSvgElement(element, elementMarkup)\n    callback()\n  })\n}\n\n\nconst initialiseSvgElements = (getSvgElementById, {idsWithMarkup, onMouseOver,onMouseOut,onClick}) => {\n  //More than one id can correspond to an element - see the svg \"use\" elements\n  groupIntoPairs(\n    idsWithMarkup\n      .map(e=>e.id)\n      .filter((e,ix,self)=> self.indexOf(e) === ix)\n      .map(id => [getSvgElementById(id),id]),\n    `[0].id`\n  )\n    .forEach(a => {\n      const element = a[1][0][0]\n      const ids = a[1].map(t => t[1])\n      //Given an element and its ids, we take the first element of the idsWithMarkup array that is one of the ids\n      const markupNormalAndUnderFocus = idsWithMarkup.find(m => ids.includes(m.id))\n\n      paintSvgElement(element, markupNormalAndUnderFocus.markupNormal)\n\n      registerEvent(element, `mouseover`, markupNormalAndUnderFocus.markupUnderFocus, onMouseOver.bind(this, ids))\n      registerEvent(element, `mouseout`, markupNormalAndUnderFocus.markupNormal, onMouseOut.bind(this, ids))\n      registerEvent(element, `click`, {}, onClick.bind(this, ids))\n    })\n}\n\nconst loadSvg = (species, selectedView) => require(`./svg/${species}${selectedView ? `.${selectedView}` : ``}.svg`)\nconst resolve = (uri, baseUrl) => URI(uri).is(`absolute`) ? URI(uri) : URI(uri, baseUrl)\n\nconst AnatomogramSvgWrapperDiv = styled.div`\n  display: inline-block;\n  vertical-align: top;\n  width: 90%;\n`\n\n// ReactSVG loads the SVG file asynchronously (hence the callback prop). We don’t use componentDidUpdate or\n// componentDidMount because they can’t guarantee that the SVG is already loaded when they’re run.\nconst AnatomogramSvg = (props) =>\n  <AnatomogramSvgWrapperDiv>\n    <ReactSVG\n      onInjected={(error, svgDomNode) => {\n        if (error) {\n          console.log(`ReactSVG Error: ${error}`)\n        } else {\n          initialiseSvgElements(getSvgElementById(svgDomNode), props)\n        }\n        props.onInjected(error, svgDomNode)\n      }}\n      src={resolve(loadSvg(props.species, props.selectedView), props.atlasUrl).toString()}\n      svgStyle={{width: `100%`, height: `auto`, paddingLeft: props.selectedView ? `10px` : ``}} />\n  </AnatomogramSvgWrapperDiv>\n\nAnatomogramSvg.propTypes = {\n  atlasUrl: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n  selectedView: PropTypes.string,\n  idsWithMarkup: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    markupNormal: PropTypes.object.isRequired,\n    markupUnderFocus: PropTypes.object.isRequired\n  })).isRequired,\n  onMouseOver: PropTypes.func.isRequired,\n  onMouseOut: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired,\n  onInjected: PropTypes.func.isRequired,\n}\n\nAnatomogramSvg.defaultProps = {\n  onInjected: (error, svgDomNode) => {},\n}\n\nexport default AnatomogramSvg\n","import svgsMetadata from './json/svgsMetadata.json'\n\nconst unique = (element, index, array) => array.indexOf(element) === index\nconst isNotBlank = (str) => typeof str === `string` && str.trim() !== ``\n\nconst supportedSpecies =\n  svgsMetadata\n    .map((svgMetadata) => svgMetadata.species)\n    .filter(unique)\n\nconst multipleViewsSpecies =\n  svgsMetadata\n    .filter((svgMetadata) => svgMetadata.view !== ``)\n    .map((svgMetadata) => svgMetadata.species)\n    .filter(unique)\n\nconst anatomogramViews =\n  multipleViewsSpecies.reduce((acc, species) => {\n    acc[species] =\n      svgsMetadata.filter((svgMetadata) => svgMetadata.species === species)\n        .map((svgMetadata) => svgMetadata.view)\n        .filter(isNotBlank)\n        .sort()\n        .reverse()\t// The order we want is `male`, `female`, `brain` and `whole_plant`, `flower_parts` :)\n    return acc\n  }, {})\n\nconst getAnatomogramViews = (species) => {\n  if (supportedSpecies.includes(species)) {\n    return anatomogramViews[species] || []\n  }\n}\n\nconst getDefaultView = (species) => {\n  if (supportedSpecies.includes(species)) {\n    return getAnatomogramViews(species)[0] || null\n  }\n}\n\nexport {getAnatomogramViews, getDefaultView, supportedSpecies}\n","import {isEqual,negate} from 'lodash'\n\nimport {compose, withPropsOnChange, defaultProps, mapProps, onlyUpdateForPropTypes, setPropTypes} from 'recompose'\n\nimport Anatomogram from './Anatomogram'\nimport PropTypes from 'prop-types'\n\n\nconst arrayDifference = (arr1, arr2) =>\n  Array.isArray(arr1) && Array.isArray(arr2) ? arr1.filter((e) => !arr2.includes(e)) : arr1\n\nconst elementMarkup = (colour, opacity) => ({fill: colour, opacity: opacity})\n\nconst idsWithMarkupAccordingToCurrentColoringScheme = ({\n  showIds,\n  showColour,\n  showOpacity,\n  highlightIds,\n  highlightColour,\n  highlightOpacity,\n  selectIds,\n  selectColour,\n  selectOpacity}) => {\n  const uniqueShowIds = arrayDifference(showIds, [...highlightIds, ...selectIds])\n  const uniqueHighlightIds = arrayDifference(highlightIds, selectIds)\n\n\n  //Given an element and its ids, we take the first element of this array having one of the ids\n  return [].concat(\n    selectIds.map(id => ({\n      id,\n      markupNormal: elementMarkup(selectColour, selectOpacity),\n      markupUnderFocus: elementMarkup(selectColour, selectOpacity+0.2)\n    })),\n    uniqueHighlightIds.map(id => ({\n      id,\n      markupNormal: elementMarkup(highlightColour, highlightOpacity),\n      markupUnderFocus: elementMarkup(highlightColour, highlightOpacity+0.2)\n    })),\n    uniqueShowIds.map(id => ({\n      id,\n      markupNormal: elementMarkup(showColour, showOpacity),\n      markupUnderFocus: elementMarkup(highlightColour, highlightOpacity+0.2)\n    })),\n  )\n}\n\nconst addColoringScheme  = compose(\n  defaultProps({\n    showIds: [],\n    highlightIds: [],\n    selectIds: [],\n    showColour: `grey`,\n    highlightColour: `red`,\n    selectColour: `purple`,\n    showOpacity: 0.4,\n    highlightOpacity: 0.4,\n    selectOpacity: 0.4}),\n  withPropsOnChange(negate(isEqual),\n    props => ({idsWithMarkup: idsWithMarkupAccordingToCurrentColoringScheme(props)})\n  )\n)\n\nconst normaliseSpecies = mapProps(\n  props => Object.assign({}, props, {species: props.species.toLowerCase().replace(/ +/, `_`)})\n)\n\nconst addDefaultCallbacks = defaultProps({\n  onMouseOver: () => {},\n  onMouseOut: () => {},\n  onClick: () => {}\n})\n\nconst definePropTypes = setPropTypes({\n  atlasUrl: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n  idsWithMarkup: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    markupNormal: PropTypes.object.isRequired,\n    markupUnderFocus: PropTypes.object.isRequired\n  })).isRequired,\n  onMouseOver: PropTypes.func.isRequired,\n  onMouseOut: PropTypes.func.isRequired,\n  onClick: PropTypes.func.isRequired\n})\n\nconst defineDefaultProps = defaultProps({\n  atlasUrl: `https://www.ebi.ac.uk/gxa/`\n})\n\nexport default compose(addColoringScheme, onlyUpdateForPropTypes, definePropTypes, defineDefaultProps, addDefaultCallbacks, normaliseSpecies)(Anatomogram)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport URI from 'urijs'\nimport styled from 'styled-components'\n\nimport {getAnatomogramViews} from './Assets'\n\nconst loadIcon = (view, selectedView) => require(`./img/${view}.${view === selectedView ? `` : `un`}selected.png`)\nconst resolve = (uri, baseUrl) => URI(uri).is(`absolute`) ? URI(uri) : URI(uri, baseUrl)\n\nconst IconWrapperDiv = styled.div`\n  display: inline-block;\n  vertical-align: top;\n  width: 10%;\n  max-width: 44px;\n  line-height: 0;\n`\n\nconst IconImg = styled.img`\n  border: 1px solid #ccc;\n  border-radius: 4px;\n  width: 100%;\n  height: auto;\n  padding: 2px;\n\n  &:hover {\n    border: 1px solid orange;\n    background: lightgoldenrodyellow;\n    cursor: pointer;\n  }\n`\n\nconst Switcher = ({atlasUrl, species, selectedView, onChangeView}) =>\n  <IconWrapperDiv>\n    {getAnatomogramViews(species).map((view) =>\n      <IconImg\n        key={view}\n        onClick={() => onChangeView(view)}\n        src={resolve(loadIcon(view, selectedView), atlasUrl).toString()} />\n    )}\n  </IconWrapperDiv>\n\nSwitcher.propTypes = {\n  atlasUrl: PropTypes.string.isRequired,\n  species: PropTypes.string.isRequired,\n  selectedView: PropTypes.string,\n  onChangeView: PropTypes.func.isRequired\n}\n\nSwitcher.defaultProps = {\n  atlasUrl: `https://www.ebi.ac.uk/gxa/`\n}\n\nexport default Switcher\n","var map = {\n\t\"./brain.selected.png\": \"./src/img/brain.selected.png\",\n\t\"./brain.unselected.png\": \"./src/img/brain.unselected.png\",\n\t\"./female.selected.png\": \"./src/img/female.selected.png\",\n\t\"./female.unselected.png\": \"./src/img/female.unselected.png\",\n\t\"./flower_parts.selected.png\": \"./src/img/flower_parts.selected.png\",\n\t\"./flower_parts.unselected.png\": \"./src/img/flower_parts.unselected.png\",\n\t\"./male.selected.png\": \"./src/img/male.selected.png\",\n\t\"./male.unselected.png\": \"./src/img/male.unselected.png\",\n\t\"./whole_plant.selected.png\": \"./src/img/whole_plant.selected.png\",\n\t\"./whole_plant.unselected.png\": \"./src/img/whole_plant.unselected.png\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/img sync recursive ^\\\\.\\\\/.*selected\\\\.png$\";","module.exports = __webpack_public_path__ + \"cbe297d1ea7bf5aac3cfcd540c8be570.png\";","module.exports = __webpack_public_path__ + \"bc6cb140072af5b41e6dc150228f8735.png\";","module.exports = __webpack_public_path__ + \"a9cbc6e400cd961706ef5e528563fe6d.png\";","module.exports = __webpack_public_path__ + \"269274763eff686d3c27aece90a0c026.png\";","module.exports = __webpack_public_path__ + \"d0d56ff8bdb244712e9e483c6a639080.png\";","module.exports = __webpack_public_path__ + \"5aad6781bf1842d768e7d728adcf31a2.png\";","module.exports = __webpack_public_path__ + \"fe374fbbda778cc8600ca3d2bbf49074.png\";","module.exports = __webpack_public_path__ + \"5b8007512579bbcc4f34d45ac6349992.png\";","module.exports = __webpack_public_path__ + \"582c3f6d2f6e59c501473289851075dd.png\";","module.exports = __webpack_public_path__ + \"3399d604b656023383db95baf7484d1e.png\";","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Anatomogram from './Main'\nimport {supportedSpecies} from './Assets'\n\nconst render = function (options, target) {\n  ReactDOM.render(<Anatomogram {...options}/>, document.getElementById(target))\n}\n\nexport {Anatomogram as default, render, supportedSpecies as anatomogramSpecies}\n","var map = {\n\t\"./anolis_carolinensis.svg\": \"./src/svg/anolis_carolinensis.svg\",\n\t\"./arabidopsis_thaliana.svg\": \"./src/svg/arabidopsis_thaliana.svg\",\n\t\"./bos_taurus.svg\": \"./src/svg/bos_taurus.svg\",\n\t\"./brachypodium_distachyon.flower_parts.svg\": \"./src/svg/brachypodium_distachyon.flower_parts.svg\",\n\t\"./brachypodium_distachyon.whole_plant.svg\": \"./src/svg/brachypodium_distachyon.whole_plant.svg\",\n\t\"./gallus_gallus.svg\": \"./src/svg/gallus_gallus.svg\",\n\t\"./homo_sapiens.brain.svg\": \"./src/svg/homo_sapiens.brain.svg\",\n\t\"./homo_sapiens.female.svg\": \"./src/svg/homo_sapiens.female.svg\",\n\t\"./homo_sapiens.male.svg\": \"./src/svg/homo_sapiens.male.svg\",\n\t\"./hordeum_vulgare.flower_parts.svg\": \"./src/svg/hordeum_vulgare.flower_parts.svg\",\n\t\"./hordeum_vulgare.whole_plant.svg\": \"./src/svg/hordeum_vulgare.whole_plant.svg\",\n\t\"./macaca_mulatta.svg\": \"./src/svg/macaca_mulatta.svg\",\n\t\"./monodelphis_domestica.svg\": \"./src/svg/monodelphis_domestica.svg\",\n\t\"./mus_musculus.brain.svg\": \"./src/svg/mus_musculus.brain.svg\",\n\t\"./mus_musculus.female.svg\": \"./src/svg/mus_musculus.female.svg\",\n\t\"./mus_musculus.male.svg\": \"./src/svg/mus_musculus.male.svg\",\n\t\"./oryza_sativa.flower_parts.svg\": \"./src/svg/oryza_sativa.flower_parts.svg\",\n\t\"./oryza_sativa.whole_plant.svg\": \"./src/svg/oryza_sativa.whole_plant.svg\",\n\t\"./papio_anubis.svg\": \"./src/svg/papio_anubis.svg\",\n\t\"./rattus_norvegicus.svg\": \"./src/svg/rattus_norvegicus.svg\",\n\t\"./solanum_lycopersicum.flower_parts.svg\": \"./src/svg/solanum_lycopersicum.flower_parts.svg\",\n\t\"./solanum_lycopersicum.whole_plant.svg\": \"./src/svg/solanum_lycopersicum.whole_plant.svg\",\n\t\"./solanum_tuberosum.svg\": \"./src/svg/solanum_tuberosum.svg\",\n\t\"./sorghum_bicolor.flower_parts.svg\": \"./src/svg/sorghum_bicolor.flower_parts.svg\",\n\t\"./sorghum_bicolor.whole_plant.svg\": \"./src/svg/sorghum_bicolor.whole_plant.svg\",\n\t\"./tetraodon_nigroviridis.svg\": \"./src/svg/tetraodon_nigroviridis.svg\",\n\t\"./triticum_aestivum.flower_parts.svg\": \"./src/svg/triticum_aestivum.flower_parts.svg\",\n\t\"./triticum_aestivum.whole_plant.svg\": \"./src/svg/triticum_aestivum.whole_plant.svg\",\n\t\"./xenopus_tropicalis.svg\": \"./src/svg/xenopus_tropicalis.svg\",\n\t\"./zea_mays.flower_parts.svg\": \"./src/svg/zea_mays.flower_parts.svg\",\n\t\"./zea_mays.whole_plant.svg\": \"./src/svg/zea_mays.whole_plant.svg\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/svg sync recursive ^\\\\.\\\\/.*\\\\.svg$\";","module.exports = __webpack_public_path__ + \"42e11a1afb321056726cb714fc2b29ed.svg\";","module.exports = __webpack_public_path__ + \"9e029162d2d2fca8137ab8fd3cf12ffc.svg\";","module.exports = __webpack_public_path__ + \"1f0105bc3a6666729c11d80ffa1ae919.svg\";","module.exports = __webpack_public_path__ + \"1de18558e556536a227801779aa94771.svg\";","module.exports = __webpack_public_path__ + \"9ca356010afccc1946b8290847dc90bf.svg\";","module.exports = __webpack_public_path__ + \"13d5276968b2bdba1c6d83dbc4892cc6.svg\";","module.exports = __webpack_public_path__ + \"f7155367498db4e86049d705e91b8956.svg\";","module.exports = __webpack_public_path__ + \"52fda97ce0f3cbfac07626e56daead32.svg\";","module.exports = __webpack_public_path__ + \"4626c730027e5ff70254d23451537f9a.svg\";","module.exports = __webpack_public_path__ + \"81117fe192f85492d5a0a4e2465b11d0.svg\";","module.exports = __webpack_public_path__ + \"5614d388d36f6cab27fa6de4fdbac6de.svg\";","module.exports = __webpack_public_path__ + \"6dc6fed18ecfbebfbf9403a6c7df6515.svg\";","module.exports = __webpack_public_path__ + \"7b27468902ba520db2e27431e247547c.svg\";","module.exports = __webpack_public_path__ + \"bbbcce33c7259be34c77037843606255.svg\";","module.exports = __webpack_public_path__ + \"f950766239d4c1005b43ec60a19f212a.svg\";","module.exports = __webpack_public_path__ + \"236878cf36edd206f852c1c86a98ec2c.svg\";","module.exports = __webpack_public_path__ + \"eef5a18199939d306c11b75323c7fe5c.svg\";","module.exports = __webpack_public_path__ + \"feb47a20dd2a281a55f6521928d5759b.svg\";","module.exports = __webpack_public_path__ + \"63fff6b7536e843452ae95b82b28402d.svg\";","module.exports = __webpack_public_path__ + \"28ac5ad41796711bfe061af787b1bc7e.svg\";","module.exports = __webpack_public_path__ + \"bd5b384f4015e57ab394bf1a0e60b208.svg\";","module.exports = __webpack_public_path__ + \"0f358510861736791edc8f91eb88aa27.svg\";","module.exports = __webpack_public_path__ + \"2c3a60abb1fd4675c939f2623f939379.svg\";","module.exports = __webpack_public_path__ + \"d716785b6df1eb3436ed0c8b083023df.svg\";","module.exports = __webpack_public_path__ + \"120316d86001911ca318d627334d5074.svg\";","module.exports = __webpack_public_path__ + \"9a5bda4d22d8db48509add286b5cd013.svg\";","module.exports = __webpack_public_path__ + \"3dbe683fb3d8d07aba0cc901ad694d7c.svg\";","module.exports = __webpack_public_path__ + \"eb959d9bbea6f5ee892ce2c7b045fb8d.svg\";","module.exports = __webpack_public_path__ + \"98271459a68eef1b5b641ceb2fdf9e08.svg\";","module.exports = __webpack_public_path__ + \"3f037101504d51568440b73cd5bd7808.svg\";","module.exports = __webpack_public_path__ + \"9c89f587f71426483e6bfe764220aa18.svg\";"],"sourceRoot":""}